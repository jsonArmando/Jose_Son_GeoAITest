{
  "info": {
    "name": "Geospatial Computer Vision API",
    "description": "API completa para an√°lisis de mapas y extracci√≥n de informaci√≥n geoespacial usando Computer Vision y Deep Learning",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "job_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "segment_name",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üó∫Ô∏è Map Analysis",
      "item": [
        {
          "name": "Upload and Analyze Map",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Extract job_id from response and set as variable",
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('job_id', jsonData.job_id);",
                  "    console.log('Job ID saved: ' + jsonData.job_id);",
                  "}",
                  "",
                  "// Test response structure",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job_id', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('job_id');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData.status).to.eql('processing');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "",
                  "description": "Imagen del mapa a analizar (JPG, PNG, etc.)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/analyze-map",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "analyze-map"
              ]
            },
            "description": "Sube una imagen de mapa para an√°lisis geoespacial. El sistema detectar√° coordenadas, elementos cartogr√°ficos y extraer√° regiones de inter√©s."
          },
          "response": [
            {
              "name": "Successful Upload",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": "map_sample.jpg"
                    }
                  ]
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/analyze-map",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "analyze-map"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"job_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"status\": \"processing\",\n    \"message\": \"Map analysis started\"\n}"
            },
            {
              "name": "Invalid File Type",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": "document.pdf"
                    }
                  ]
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/analyze-map",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "analyze-map"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"detail\": \"File must be an image\"\n}"
            }
          ]
        },
        {
          "name": "Get Job Status and Results",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Extract segment names from successful results",
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.result && typeof jsonData.result === 'string') {",
                  "        try {",
                  "            var resultObj = JSON.parse(jsonData.result);",
                  "            if (resultObj.regions && resultObj.regions.length > 0) {",
                  "                var segmentPath = resultObj.regions[0].segment_path;",
                  "                var segmentName = segmentPath.split('/').pop();",
                  "                pm.collectionVariables.set('segment_name', segmentName);",
                  "                console.log('Segment name saved: ' + segmentName);",
                  "            }",
                  "        } catch (e) {",
                  "            console.log('Could not parse result object');",
                  "        }",
                  "    }",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job information', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('job_id');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData).to.have.property('created_at');",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Check if job_id is set",
                  "var jobId = pm.collectionVariables.get('job_id');",
                  "if (!jobId) {",
                  "    console.log('Warning: job_id not set. Run \"Upload and Analyze Map\" first.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/jobs/{{job_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "jobs",
                "{{job_id}}"
              ]
            },
            "description": "Consulta el estado del trabajo de an√°lisis y obtiene los resultados cuando est√© completo. Incluye coordenadas detectadas, objetos encontrados y regiones extra√≠das."
          },
          "response": [
            {
              "name": "Job Completed Successfully",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/jobs/123e4567-e89b-12d3-a456-426614174000",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobs",
                    "123e4567-e89b-12d3-a456-426614174000"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"job_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"status\": \"completed\",\n    \"created_at\": \"2024-01-15T10:30:00\",\n    \"result\": {\n        \"detected_objects\": [\n            {\n                \"bbox\": [100, 200, 300, 250],\n                \"class_name\": \"text\",\n                \"confidence\": 0.85\n            },\n            {\n                \"bbox\": [50, 50, 150, 100],\n                \"class_name\": \"legend\",\n                \"confidence\": 0.92\n            }\n        ],\n        \"coordinates\": [\n            {\n                \"lat\": 40.7128,\n                \"lon\": -74.0060,\n                \"confidence\": 0.9,\n                \"text\": \"40.7128, -74.0060\"\n            },\n            {\n                \"lat\": 34.0522,\n                \"lon\": -118.2437,\n                \"confidence\": 0.87,\n                \"text\": \"34¬∞03'08\\\"N 118¬∞14'37\\\"W\"\n            }\n        ],\n        \"regions\": [\n            {\n                \"coordinates\": [\n                    {\n                        \"lat\": 40.7128,\n                        \"lon\": -74.0060,\n                        \"confidence\": 0.9,\n                        \"text\": \"40.7128, -74.0060\"\n                    }\n                ],\n                \"segment_path\": \"uploads/segment_12345.jpg\",\n                \"bbox\": [50, 100, 400, 300]\n            }\n        ]\n    }\n}"
            },
            {
              "name": "Job Still Processing",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/jobs/123e4567-e89b-12d3-a456-426614174000",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobs",
                    "123e4567-e89b-12d3-a456-426614174000"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"job_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"status\": \"processing\",\n    \"created_at\": \"2024-01-15T10:30:00\",\n    \"result\": null\n}"
            },
            {
              "name": "Job Failed",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/jobs/123e4567-e89b-12d3-a456-426614174000",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobs",
                    "123e4567-e89b-12d3-a456-426614174000"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"job_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"status\": \"failed: Cannot load image: /path/to/image.jpg\",\n    \"created_at\": \"2024-01-15T10:30:00\",\n    \"result\": null\n}"
            },
            {
              "name": "Job Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/jobs/non-existent-job-id",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobs",
                    "non-existent-job-id"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"detail\": \"Job not found\"\n}"
            }
          ]
        }
      ],
      "description": "Endpoints principales para an√°lisis de mapas geoespaciales"
    },
    {
      "name": "üìÅ File Download",
      "item": [
        {
          "name": "Download Extracted Segment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is image file', function () {",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.include('image');",
                  "});",
                  "",
                  "pm.test('Response has content', function () {",
                  "    pm.expect(pm.response.responseSize).to.be.above(0);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Check if segment_name is set",
                  "var segmentName = pm.collectionVariables.get('segment_name');",
                  "if (!segmentName) {",
                  "    console.log('Warning: segment_name not set. Run previous requests first.');",
                  "    // Set example segment name for testing",
                  "    pm.collectionVariables.set('segment_name', 'segment_example.jpg');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "accept",
                "value": "image/*"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/jobs/{{job_id}}/segments/{{segment_name}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "jobs",
                "{{job_id}}",
                "segments",
                "{{segment_name}}"
              ]
            },
            "description": "Descarga los segmentos de imagen extra√≠dos del an√°lisis del mapa. Estos segmentos contienen las regiones de inter√©s identificadas."
          },
          "response": [
            {
              "name": "Successful Download",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "accept",
                    "value": "image/*"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/jobs/123e4567-e89b-12d3-a456-426614174000/segments/segment_12345.jpg",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobs",
                    "123e4567-e89b-12d3-a456-426614174000",
                    "segments",
                    "segment_12345.jpg"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "plain",
              "header": [
                {
                  "key": "content-type",
                  "value": "image/jpeg"
                },
                {
                  "key": "content-length",
                  "value": "45678"
                }
              ],
              "cookie": [],
              "body": "[Binary Image Data]"
            },
            {
              "name": "Segment Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "accept",
                    "value": "image/*"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/jobs/123e4567-e89b-12d3-a456-426614174000/segments/non-existent-segment.jpg",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobs",
                    "123e4567-e89b-12d3-a456-426614174000",
                    "segments",
                    "non-existent-segment.jpg"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"detail\": \"Segment not found\"\n}"
            }
          ]
        }
      ],
      "description": "Endpoints para descargar archivos generados por el an√°lisis"
    },
    {
      "name": "üîß System",
      "item": [
        {
          "name": "Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Service is healthy', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('healthy');",
                  "    pm.expect(jsonData.service).to.eql('geospatial-cv');",
                  "});",
                  "",
                  "pm.test('Response time is less than 500ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/health",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "Verifica el estado de salud del servicio API"
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "health"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": \"healthy\",\n    \"service\": \"geospatial-cv\"\n}"
            }
          ]
        },
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/docs",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "docs"
              ]
            },
            "description": "Accede a la documentaci√≥n interactiva de la API (Swagger UI)"
          },
          "response": []
        }
      ],
      "description": "Endpoints del sistema para monitoreo y documentaci√≥n"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('üöÄ Executing request to: ' + pm.request.url);",
          "console.log('üìä Current variables:');",
          "console.log('   - base_url: ' + pm.collectionVariables.get('base_url'));",
          "console.log('   - job_id: ' + pm.collectionVariables.get('job_id'));",
          "console.log('   - segment_name: ' + pm.collectionVariables.get('segment_name'));"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "console.log('‚úÖ Response received with status: ' + pm.response.status);",
          "console.log('‚è±Ô∏è Response time: ' + pm.response.responseTime + 'ms');"
        ]
      }
    }
  ]
}